{"version":3,"sources":["Header.js","Card/ChuckCard.js","Paths/Random.js","Paths/Categories.js","Paths/SelectedCategory.js","Main.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menu","background","Header","classes","React","useState","anchorEl","setAnchorEl","handleClose","history","useHistory","className","Grid","container","spacing","direction","justify","wrap","AppBar","color","position","Toolbar","IconButton","edge","menuButton","aria-label","item","xs","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","to","button","variant","goBack","Typography","title","goForward","media","height","ChuckCard","props","Card","CardActionArea","CardMedia","image","CardContent","component","jokeProps","categories","value","Random","random","setRandom","useEffect","fetch","then","response","json","data","Categories","setCategories","map","category","key","SelectedCategory","setCategory","params","useParams","Main","path","exact","Footer","App","darkMode","setDarkMode","createMuiTheme","palette","type","primary","light","main","dark","secondary","ThemeProvider","Paper","style","Switch","checked","onChange","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c5a09d04.chunk.js","sourcesContent":["import React from \"react\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {useHistory} from \"react-router\";\nimport {Link} from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 0,\n    },\n    // menuButton: {\n    //     marginRight: theme.spacing(10),\n    // },\n    // title: {\n    //     flexGrow: 1,\n    //     marginRight: theme.spacing(18),\n    //\n    // },\n    // button: {\n    //     '& > *': {\n    //         margin: theme.spacing(1),\n    //     },\n    // },\n    menu: {\n        background: \"#26a69a\",\n    }\n}));\n\nexport default function Header() {\n\n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const history = useHistory();\n    function goBackHandle(){\n        history.goBack();\n    }\n    function goForwardHandle(){\n        history.goForward();\n    }\n\n    return(\n        <div className={classes.root}>\n            <Grid container spacing={0} direction={\"row\"} justify={\"center\"} wrap={\"nowrap\"}>\n            <AppBar color=\"primary\" position=\"relative\">\n                <Toolbar>\n                    <IconButton edge=\"start\" color=\"inherit\" className={classes.menuButton} aria-label=\"menu\">\n                        <Grid item xs={1}>\n                        <Button color=\"secondary\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                            Menu\n                        </Button>\n                        </Grid>\n                            <Menu\n                                id=\"simple-menu\"\n                                anchorEl={anchorEl}\n                                keepMounted\n                                open={Boolean(anchorEl)}\n                                onClose={handleClose}\n                            >\n                                <MenuItem className={classes.menu} onClick={handleClose}>\n                                    <Link to=\"/\">Home</Link>\n                                </MenuItem>\n                                <MenuItem className={classes.menu} onClick={handleClose}>\n                                    <Link to=\"/random\">Random Joke</Link>\n                                </MenuItem>\n                                <MenuItem className={classes.menu} onClick={handleClose}>\n                                    <Link to=\"/categories\">Categories</Link>\n                                </MenuItem>\n                            </Menu>\n                    </IconButton>\n\n                    <Grid item xs={2}>\n                    <Button className={classes.button} variant=\"contained\" color=\"secondary\" onClick={goBackHandle}> go back </Button>\n                    </Grid>\n\n                    <Grid item xs={6}>\n                    <Typography variant=\"h2\" className={classes.title}>\n                        Chuck Norris Jokes\n                    </Typography>\n                    </Grid>\n\n                    <Grid item xs={3}>\n                    <Button className={classes.button} variant=\"contained\" color=\"secondary\" onClick={goForwardHandle}> go forward </Button>\n                    </Grid>\n\n                </Toolbar>\n            </AppBar>\n            </Grid>\n        </div>\n    );\n}","import React from 'react';\nimport \"./ChuckCard.css\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n    media: {\n        height: 300,\n    },\n});\n\nexport default function ChuckCard(props) {\n\n    const classes = useStyles();\n\n    return (\n        <Card className={\"ChuckCard\"}>\n            <CardActionArea>\n                <CardMedia\n                    className={classes.media}\n                    image=\"http://images05.weekend.at/20120125_PD7929.HR.jpg/620x330/59.576.265\"\n                    title=\"ChuckNorris\"\n                />\n                <CardContent>\n                    <Typography variant=\"h5\" color=\"inherit\" component=\"h3\">\n                        {props.jokeProps.categories}\n                    </Typography>\n                    <Typography variant=\"body1\" color=\"secondary\" component=\"p\">\n                        {props.jokeProps.value}\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    );\n\n}","import React, {useEffect, useState} from \"react\";\nimport ChuckCard from \"../Card/ChuckCard\";\n\nexport default function Random() {\n\n    const [random, setRandom] = useState();\n\n    useEffect(() => {\n        fetch(\"https://api.chucknorris.io/jokes/random\")\n            .then (response => response.json())\n            .then (data => setRandom(data))\n    },[] );\n\n    return(\n        <>\n            {random && <ChuckCard jokeProps={random}></ChuckCard>  }\n        </>\n    )\n}","import React, {useEffect, useState} from \"react\";\nimport {Link} from \"react-router-dom\";\n\nexport default function Categories() {\n\n    const [categories, setCategories] = useState([]);\n\n    useEffect(() => {\n        fetch(\"https://api.chucknorris.io/jokes/categories\")\n            .then (response => response.json())\n            .then (data => setCategories(data))\n    },[] );\n\nreturn(\n    <div>\n        {categories.map(category => (\n            <h2 key={category.id}>\n                <Link to={`/category/${category}`}>{category}</Link>\n            </h2>\n        ))}\n    </div>\n)\n}\n\n","import React, {useEffect, useState} from \"react\";\nimport ChuckCard from \"../Card/ChuckCard\";\nimport {useParams} from \"react-router\";\n\nexport default function SelectedCategory() {\n\n    const [category, setCategory] = useState([]);\n\n    const params = useParams();\n\n    useEffect(() => {\n        // fetch-Pfad in der URL im Browser\n        fetch(`https://api.chucknorris.io/jokes/random?category=${params.category}`)\n            .then (response => response.json())\n            .then (data => setCategory(data))\n    },[] );\n\n    return(\n        <div>\n            {category && <ChuckCard jokeProps={category}></ChuckCard>  }\n        </div>\n    )\n}","import React from \"react\";\nimport Random from \"./Paths/Random\";\nimport Categories from \"./Paths/Categories\";\nimport SelectedCategory from \"./Paths/SelectedCategory\";\nimport {Switch, Route,} from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"./Main.css\";\n\nconst useStyles = makeStyles({\n        root: {\n                background: 'linear-gradient(45deg, #007bb2 30%, #33ab9f 60%)',\n                // color: props => props.color,\n        },\n});\n\nexport default function Main(props) {\n\n        const classes = useStyles(props);\n\nreturn(\n    <div className={classes.root}>\n            <div className=\"Main\">\n            <Switch>\n                    <Route path=\"/\" exact>\n                            <h2>Welcome to Chuck Norris's best jokes</h2>\n                    </Route>\n                    {/*Pfad in der URL im Browser Localhost:3000*/}\n                    <Route path=\"/category/:category\">\n                            <SelectedCategory></SelectedCategory>\n                    </Route>\n                    <Route path=\"/random\" exact>\n                            <Random></Random>\n                    </Route>\n                    <Route path=\"/categories\">\n                            <Categories></Categories>\n                    </Route>\n            </Switch>\n            </div>\n        </div>\n);\n}","import React from \"react\";\nimport \"./Footer.css\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        background: 'linear-gradient(45deg, #007bb2 30%, #33ab9f 60%)',\n    },\n});\n\nexport default function Footer(props) {\n\n    const classes = useStyles(props);\n\n    return(\n        <div className=\"Footer\">\n    <p className={classes.root}>created on 21th June 2020</p>\n        </div>\n    );\n}","import React from 'react';\nimport './App.css';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport { createMuiTheme , ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n}));\n\nfunction App() {\n\n    const classes = useStyles();\n\n    const [darkMode, setDarkMode] = React.useState(true);\n    const theme = createMuiTheme({\n        palette: {\n            type: darkMode ? 'dark' : 'light',\n            primary: {\n                light: '#478B97',\n                main: '#025964',\n                dark: '#d3ecee',\n            },\n            secondary: {\n                light: '#F38765',\n                main: '#33ab9f',\n                dark: '#79EFA1',\n            }\n        }});\n\n  return (\n      <ThemeProvider theme={theme}>\n          <div className={classes.root}>\n              <Grid container spacing={0} direction={\"column\"} >\n                <Paper style={{height: \"100vh\"}}>\n                    <div className=\"App\">\n                     <Switch checked={darkMode} onChange={() => setDarkMode(!darkMode)}></Switch>\n\n                          <Grid item xs={12}>\n                                <Header></Header>\n                          </Grid>\n                          <Grid item xs={12}>\n                                 <Main></Main>\n                          </Grid>\n                          <Grid item xs={12}>\n                                 <Footer></Footer>\n                          </Grid>\n                     </div>\n                 </Paper>\n              </Grid>\n          </div>\n      </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Router>\n          <App />\n      </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}